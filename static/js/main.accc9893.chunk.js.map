{"version":3,"sources":["utils/canvas.ts","globalStyles.ts","App.tsx","index.tsx"],"names":["getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","drawLine","ctx","points","lineWidth","lineDash","beginPath","setLineDash","moveTo","slice","point","lineTo","stroke","drawArrowHead","from","to","radius","angle","x","y","x_center","y_center","Math","atan2","cos","sin","PI","closePath","fill","drawArrow","drawPoint","center","arc","drawMass","width","height","fillStyle","translate","rotate","rect","setTransform","drawAxes","origin","offset","lerpWithRange","value","min","max","newMin","newMax","drawGraph","domain","codomain","scale","coscale","func","step","GlobalStyle","createGlobalStyle","startTime","InfoContainer","styled","div","labels","slopeAngle","createLabel","key","tex","element","document","createElement","style","position","katex","render","setSpanPosition","span","ratio","getComputedStyle","parseInt","getPropertyValue","left","top","App","canvasRef","useRef","overlayRef","angleRef","useEffect","addEventListener","event","code","Date","now","current","canvas","getContext","animationFrameId","innerWidth","innerHeight","slopeTangent","tan","qx","qy","px","py","g","h","v0","sqrt","t","clearRect","ax","ay","bx","by","startAngle","endAngle","drawArc","graphWidth","max_t","draw","requestAnimationFrame","appendChild","cancelAnimationFrame","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.accc9893.chunk.js","sourcesContent":["export const getPixelRatio = (context: any) => {\n  var backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n    \n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\nexport const drawLine = (\n    ctx: CanvasRenderingContext2D,\n    points: [number, number][],\n    lineWidth: number = 2, lineDash: number[] = []) => {\n  ctx.beginPath();\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(lineDash);\n  ctx.moveTo(points[0][0], points[0][1]);\n  for (const point of points.slice(1)) {\n    ctx.lineTo(point[0], point[1]);\n  }\n  ctx.stroke();\n};\n\nexport const drawArrowHead = (\n  ctx: CanvasRenderingContext2D,\n  from: [number, number],\n  to: [number, number], \n  radius: number) => {\n  const x_center = to[0];\n  const y_center = to[1];\n\n  let angle;\n  let x;\n  let y;\n\n  ctx.beginPath();\n\n  angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\n  x = radius * Math.cos(angle) + x_center;\n  y = radius * Math.sin(angle) + y_center;\n  ctx.moveTo(x, y);\n\n  angle += (1.0/3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + x_center;\n  y = radius * Math.sin(angle) + y_center;\n  ctx.lineTo(x, y);\n\n  angle += (1.0/3.0) * (2 * Math.PI);\n  x = radius * Math.cos(angle) + x_center;\n  y = radius * Math.sin(angle) + y_center;\n  ctx.lineTo(x, y);\n\n  ctx.closePath();\n  ctx.fill();\n};\n\nexport const drawArrow = (\n    ctx: CanvasRenderingContext2D,\n    from: [number, number],\n    to: [number, number], \n    radius: number = 10,\n    lineWidth: number = 2) => {\n  drawLine(ctx, [from, to], lineWidth);\n  drawArrowHead(ctx, from, to, radius);\n};\n\nexport const drawPoint = (\n    ctx: CanvasRenderingContext2D,\n    center: [number, number],\n    radius: number = 7) => {\n  ctx.beginPath();\n  ctx.arc(center[0], center[1], radius, 0, 2 * Math.PI);\n  ctx.fill();\n};\n\nexport const drawArc = (\n    ctx: CanvasRenderingContext2D,\n    center: [number, number],\n    radius: number = 7,\n    startAngle: number, endAngle: number,\n    lineWidth: number = 2) => {\n  ctx.beginPath();\n  ctx.lineWidth = lineWidth;\n  ctx.arc(center[0], center[1], radius, startAngle, endAngle);\n  ctx.stroke();\n};\n\nexport const drawMass = (\n    ctx: CanvasRenderingContext2D,\n    x: number, y: number,\n    angle: number,\n    width: number = 100,\n    height: number = 50) => {\n  ctx.beginPath();\n  ctx.fillStyle = '#999999';\n  ctx.lineWidth = 5;\n\n  ctx.translate(x, y);\n  ctx.rotate(angle * Math.PI/180);\n  ctx.translate(-x, -y);\n  \n  ctx.rect(x - width / 2, y - height, width, height);\n  ctx.stroke();\n  ctx.fill();\n  ctx.fillStyle = '#000000';\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\nexport const drawAxes = (\n  ctx: CanvasRenderingContext2D,\n  origin: [number, number],\n  width: number, height: number,\n  offset: [number, number] = [40, 40]) => {\n  drawArrow(ctx, [origin[0] - offset[0], origin[1]], [origin[0] + width, origin[1]]);\n  drawArrow(ctx, [origin[0], origin[1] + offset[1]], [origin[0], origin[1] - height]);\n};\n\nconst lerpWithRange = (\n    value: number,\n    min: number, max: number,\n    newMin: number, newMax: number): number => {\n  const ratio = (value - min) / (max - min);\n  return newMin + (newMax - newMin) * ratio;\n};\n\nexport const drawGraph = (\n  ctx: CanvasRenderingContext2D,\n  origin: [number, number],\n  width: number,\n  domain: [number, number],\n  codomain: [number, number],\n  scale: [number, number],\n  coscale: [number, number],\n  func: (x: number) => number,\n  step: number = 0.01, lineWidth: number = 4) => {\n  ctx.beginPath();\n  ctx.lineWidth = lineWidth;\n  ctx.moveTo(\n    origin[0],\n    origin[1] + -lerpWithRange(func(domain[0]), codomain[0], codomain[1], coscale[0], coscale[1]));\n  for (let x = domain[0] + step; x <= Math.min(domain[1], scale[1]); x += step) {\n    if (codomain[0] <= func(x) && func(x) <= codomain[1])\n      ctx.lineTo(\n        origin[0] + lerpWithRange(x, scale[0], scale[1], 0, width),\n        origin[1] + -lerpWithRange(func(x), codomain[0], codomain[1], coscale[0], coscale[1]));\n  }\n  ctx.stroke();\n};","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    margin: 0;\n\n    overflow: hidden;\n  }\n`;\n\nexport default GlobalStyle;","import React, { useRef, useEffect } from 'react';\nimport katex from 'katex';\nimport styled from 'styled-components';\nimport { drawArrow, drawAxes, drawPoint, drawLine, drawMass, getPixelRatio, drawArc } from './utils/canvas';\nimport GlobalStyle from './globalStyles';\n\nimport 'katex/dist/katex.css';\nimport { drawGraph } from './utils/canvas';\n\nconst InfoContainer = styled.div`\n  position: absolute;\n\n  left: 10px;\n  top: 10px;\n`;\n\nlet labels: {[key: string]: HTMLSpanElement} = {};\nlet startTime: number;\nlet slopeAngle = 45;\n\nconst createLabel = (key: string, tex: string): HTMLSpanElement => {\n  const element = document.createElement('span');\n  element.style.position = 'absolute';\n  katex.render(tex, element);\n  labels[key] = element;\n\n  return element;\n};\n\nconst setSpanPosition = (ctx: CanvasRenderingContext2D, span: HTMLSpanElement, x: number, y: number) => {\n  if (!span) return;\n\n  const ratio = getPixelRatio(ctx);\n  const style = getComputedStyle(span);\n  const width = parseInt(style.getPropertyValue('width'));\n  const height = parseInt(style.getPropertyValue('height'));\n  span.style.left = `${x/ratio - width / 2}px`;\n  span.style.top = `${y/ratio - height / 2}px`;\n}\n\nconst draw = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n  const { width, height } = canvas;\n\n  const slopeTangent = Math.tan(slopeAngle * Math.PI/180);\n  const qx = width * 0.5 - width * 0.04;\n  const qy = height * 0.8;\n  const px = width * 0.08;\n  const py = qy - (width * 0.5 - width * 0.12) * slopeTangent;\n  const g = 9.8 * (qx - px) / 500;\n  const h = qy - py;\n  const v0 = Math.sqrt(2 * g * h / 3);\n\n  if (!startTime) return;\n  const t = (Date.now() - startTime) / 1000 * 2;\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Virtual Right Triangle\n  drawLine(ctx, [\n    [qx, qy],\n    [px, qy],\n    [px, py],\n  ], 2);\n\n  // Perpendicular Symbol\n  drawLine(ctx, [\n    [px, qy - 30],\n    [px + 30, qy - 30],\n    [px + 30, qy],\n  ]);\n\n  // Top Virtual Line\n  drawLine(ctx, [\n    [width * 0.06, py],\n    [px, py]\n  ], 2, [10, 10]);\n\n  // Bottom Virtual Line\n  drawLine(ctx, [\n    [width * 0.06, qy],\n    [px, qy]\n  ], 2, [10, 10]);\n\n  // Slope\n  drawLine(ctx, [\n    [width * 0.04, qy - (width * 0.5 - px) * slopeTangent],\n    [width * 0.5, qy + (width * 0.04) * slopeTangent]\n  ], 4);\n  \n  // Upper arrow\n  drawArrow(ctx,\n    [width * 0.07, (py + qy) / 2 - 40],\n    [width * 0.07, py + 20]);\n\n  // Lower arrow\n  drawArrow(ctx,\n    [width * 0.07, (py + qy) / 2 + 40],\n    [width * 0.07, qy - 20]);\n  \n  // Label 'h'\n  setSpanPosition(ctx, labels['h'], width * 0.07, (py + qy) / 2);\n\n  const ax = px + (1/2 * g * t * t);\n  const ay = py + (1/2 * g * t * t) * slopeTangent;\n\n  const bx = qx + (1/2 * g * t * t - v0 * t);\n  const by = qy + (1/2 * g * t * t - v0 * t) * slopeTangent;\n\n  drawMass(ctx, ax, ay, slopeAngle);\n  setSpanPosition(ctx, labels['a'], ax + 15, ay -20);\n  drawMass(ctx, bx, by, slopeAngle);\n  setSpanPosition(ctx, labels['b'], bx + 15, by -20);\n\n  // Point P\n  drawPoint(ctx, [px, py]);\n  setSpanPosition(ctx, labels['p'], width * 0.09, py + 40);\n\n  // Point Q\n  drawPoint(ctx, [qx, qy]);\n  setSpanPosition(ctx, labels['q'], width * 0.5 - width * 0.04, qy + 30);\n\n  drawArc(ctx, [qx, qy], 75, Math.PI, Math.PI + slopeAngle * Math.PI/180);\n  setSpanPosition(ctx, labels['theta'], qx - 90, qy - 30);\n\n  // === Graph part\n  const graphWidth = width * 0.15;\n  const max_t = Math.sqrt((qx - px) * 2 / g);\n  drawAxes(ctx, [width * 0.55, height * 0.4], graphWidth, graphWidth);\n  setSpanPosition(ctx, labels['graph1_x'], width * 0.55 - 30, height * 0.4 - graphWidth);\n  setSpanPosition(ctx, labels['graph1_t'], width * 0.55 + graphWidth, height * 0.4 + 30);\n  drawGraph(ctx, [width * 0.55, height * 0.4], graphWidth, [0, t], [0, qx - px], [0, max_t], [0, graphWidth], (x: number) => 1/2 * g * x * x);\n\n  drawAxes(ctx, [width * 0.75, height * 0.4], graphWidth, graphWidth);\n  setSpanPosition(ctx, labels['graph2_v'], width * 0.75 - 30, height * 0.4 - graphWidth);\n  setSpanPosition(ctx, labels['graph2_t'], width * 0.75 + graphWidth, height * 0.4 + 30);\n  drawGraph(ctx, [width * 0.75, height * 0.4], graphWidth, [0, t], [0, g * max_t], [0, max_t], [0, graphWidth], (x: number) => g * x);\n\n  drawAxes(ctx, [width * 0.55, height * 0.8 - graphWidth], graphWidth, 40, [40, 40 + graphWidth]);\n  setSpanPosition(ctx, labels['graph3_x'], width * 0.55 - 30, height * 0.8 - graphWidth - 40);\n  setSpanPosition(ctx, labels['graph3_t'], width * 0.55 + graphWidth, height * 0.8 - graphWidth + 30);\n  drawGraph(ctx, [width * 0.55, height * 0.8 - graphWidth], graphWidth, [0, t], [-1/2 * v0 * v0 / g, 0], [0, max_t], [-graphWidth, 0], (x: number) => 1/2 * g * x * x - v0 * x);\n\n  drawAxes(ctx, [width * 0.75, height * 0.8 - graphWidth / 2], graphWidth, graphWidth / 2, [40, 40 + graphWidth / 2]);\n  setSpanPosition(ctx, labels['graph4_v'], width * 0.75 - 30, height * 0.8 - graphWidth);\n  setSpanPosition(ctx, labels['graph4_t'], width * 0.75 + graphWidth, height * 0.8 - graphWidth / 2 + 30);\n  drawGraph(ctx, [width * 0.75, height * 0.8 - graphWidth / 2], graphWidth, [0, t], [-v0, g * max_t - v0], [0, max_t], [-graphWidth / 2, graphWidth / 2], (x: number) => g * x - v0);\n};\n\nconst App: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const angleRef = useRef<HTMLParagraphElement>(null);\n\n  useEffect(() => {\n    document.addEventListener('keydown', event => {\n      if (event.code === 'ArrowUp') {\n        slopeAngle = Math.min(slopeAngle + 5, 45);\n        startTime = Date.now();\n      } else if (event.code === 'ArrowDown') {\n        slopeAngle = Math.max(slopeAngle - 5, 5);\n        startTime = Date.now();\n      }\n      if (angleRef && angleRef.current) katex.render(`\\\\theta=${slopeAngle}\\\\degree`, angleRef.current);\n    });\n\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (!ctx || !canvas) return;\n\n    const ratio = getPixelRatio(ctx);\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    let animationFrameId: number;\n    startTime = Date.now();\n\n    //Our draw came here\n    const render = () => {\n      draw(ctx, canvas);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    overlayRef.current?.appendChild(createLabel('h', 'h'));\n    overlayRef.current?.appendChild(createLabel('p', '\\\\mathrm{P}'));\n    overlayRef.current?.appendChild(createLabel('q', '\\\\mathrm{Q}'));\n    overlayRef.current?.appendChild(createLabel('r', '\\\\mathrm{R}'));\n    overlayRef.current?.appendChild(createLabel('theta', '\\\\theta'));\n    overlayRef.current?.appendChild(createLabel('a', '\\\\mathrm{A}'));\n    overlayRef.current?.appendChild(createLabel('b', '\\\\mathrm{B}'));\n    overlayRef.current?.appendChild(createLabel('graph1_t', 't'));\n    overlayRef.current?.appendChild(createLabel('graph2_t', 't'));\n    overlayRef.current?.appendChild(createLabel('graph3_t', 't'));\n    overlayRef.current?.appendChild(createLabel('graph4_t', 't'));\n    overlayRef.current?.appendChild(createLabel('graph1_x', 'x_A'));\n    overlayRef.current?.appendChild(createLabel('graph2_v', 'v_A'));\n    overlayRef.current?.appendChild(createLabel('graph3_x', 'x_B'));\n    overlayRef.current?.appendChild(createLabel('graph4_v', 'v_B'));\n\n    if (angleRef && angleRef.current) katex.render(`\\\\theta=${slopeAngle}\\\\degree`, angleRef.current);\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    }\n  }, [canvasRef]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <canvas ref={canvasRef} />\n      <div ref={overlayRef}>\n      </div>\n      <InfoContainer>\n        Press Up or Down key to raise/lower the slope.\n        <p ref={angleRef}></p>\n      </InfoContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}